"""
Task3.

Некоторое количество человек то наливают воду в бочку, то черпают из бочки. Если человек 
пытается налить больше воды, чем есть свободного объема – это ошибка, при этом объем воды в 
бочке не меняется. Так же если человек пытается зачерпнуть больше воды, чем есть в бочке –
ошибка, объем воды также при этом не меняется. В остальных случаях – успех.
Вам дан лог файл. Напишите программу, которая ответит на следующие вопросы:
- какое количество попыток налить воду в бочку было за указанный период?
- какой процент ошибок был допущен за указанный период?
- какой объем воды был налит в бочку за указанный период?
- какой объем воды был не налит в бочку за указанный период?
- … тоже самое для забора воды из бочки …
- какой объем воды был в бочке в начале указанного периода? Какой в конце указанного 
периода?
Путь к логу, желаемый период – подаются в качестве аргументов командной строки. Результат 
записывается в csv файл (с наименованием столбцов).
Пример строки запуска: java –jar App ./log.log 2020-01-01T12:00:00 2020-01-01T13:00:00
Пример лог файла:
    META DATA:
    200 (объем бочки)
    32 (текущий объем воды в бочке)
    2020-01-01Т12:51:32.124Z – [username1] - wanna top up 10l (успех)
    2020-01-01Т12:51:34.769Z – [username2] - wanna scoop 50l (фейл)
    …

Примечание: для проверки сгенерируйте лог файл объемом 1 Mb, приложите его к решению. 
Обратите внимание, искомого временного интервала может не быть в логе, приложение не 
должно при этом крашиться. Если аргументы поданы не верно, в stdout должен выводится usage.
"""
import sys


def analyze_logs(path, *period):
    pass

analyze_logs(sys.argv[1], (sys.argv[2], sys.argv[3]))
